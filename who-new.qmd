---
title: "who-new"
format: html
---

## Log. Reg Model

Created life expectancy classification based on global averages:

Low: \<60 yrs

Medium: 60-80 yrs

High: \>80

```{r}
library(dplyr)

life_exp_clean <- life_exp_clean |>
  mutate(life_exp_lvl = case_when(
    Life_expectancy < 60 ~ "Low",
    Life_expectancy >= 60 & Life_expectancy < 70 ~ "Medium",
    Life_expectancy >= 70 & Life_expectancy < 80 ~ "High",
    Life_expectancy >= 80 ~ "Very High"
  ))

life_exp_clean

```

To model the relationship between life expectancy level and different factors, logistic regression was the best choice:

```{r}
library(knitr)
library(nnet)
life_model <- multinom(life_exp_lvl ~ GDP + Population + Alcohol + percentage_expenditure + infant_deaths + Hepatitis_B + BMI + Polio + Diphtheria + thinness_1_19_years + Income_composition_of_resources + Schooling + thinness_5_9_years + Measles, data = life_exp_clean)
summary(life_model)
# Extract coefficients and standard errors from the model
coef_summary <- summary(life_model)$coefficients
se_summary <- summary(life_model)$standard.errors

# Calculate z-values (coefficients / standard errors)
z_values <- coef_summary / se_summary

# Calculate p-values using the normal distribution (two-tailed)
p_values <- 2 * (1 - pnorm(abs(z_values)))

# Display the p-values
data.frame(P_values = p_values)


```

all predictors were considered significant, with p-values close to 0.

```{r}
# Select continuous variables
continuous_vars <- life_exp_clean[, c("Life_expectancy", "Adult_Mortality", "infant_deaths", 
                                      "Alcohol", "percentage_expenditure", "Hepatitis_B", 
                                      "Measles", "BMI", "under_five_deaths", "Polio", 
                                      "Total_expenditure", "Diphtheria", "HIV/AIDS", 
                                      "GDP", "Population", "thinness_1_19_years", 
                                      "thinness_5_9_years", "Income_composition_of_resources", "Schooling")]

# Calculate the correlation matrix
cor_matrix <- cor(continuous_vars, use = "complete.obs")

# Display the correlation matrix
print(cor_matrix)
correlations_sorted <- sort(correlations)

```

By developing status

```{r}
# Subset the data by Status (Developed vs. Developing)
developed <- subset(life_exp_clean, Status == "Developed")
developing <- subset(life_exp_clean, Status == "Developing")

# Compute correlation for developed countries
developed_cor_matrix <- cor(developed[, c("Life_expectancy", "Adult_Mortality", "infant_deaths", 
                                           "Alcohol", "percentage_expenditure", "Hepatitis_B", 
                                           "Measles", "BMI", "under_five_deaths", "Polio", 
                                           "Total_expenditure", "Diphtheria", "HIV/AIDS", 
                                           "GDP", "Population", "thinness_1_19_years", 
                                           "thinness_5_9_years", "Income_composition_of_resources", "Schooling")], 
                             use = "complete.obs")

# Compute correlation for developing countries
developing_cor_matrix <- cor(developing[, c("Life_expectancy", "Adult_Mortality", "infant_deaths", 
                                              "Alcohol", "percentage_expenditure", "Hepatitis_B", 
                                              "Measles", "BMI", "under_five_deaths", "Polio", 
                                              "Total_expenditure", "Diphtheria", "HIV/AIDS", 
                                              "GDP", "Population", "thinness_1_19_years", 
                                              "thinness_5_9_years", "Income_composition_of_resources", "Schooling")], 
                              use = "complete.obs")

# Print the correlation matrices for both groups
print(developed_cor_matrix)
print(developing_cor_matrix)
```

```{r}
library(tibble)
library(dplyr)

# Step 1: Calculate Pearson correlations for all variables with 'Life_expectancy'
correlations <- cor(life_exp_clean[, c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                       "percentage_expenditure", "Hepatitis_B", "Measles", 
                                       "BMI", "under_five_deaths", "Polio", "Total_expenditure", 
                                       "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                       "thinness_1_19_years", "thinness_5_9_years", 
                                       "Income_composition_of_resources", "Schooling")], 
                    life_exp_clean$Life_expectancy)

# Step 2: Create a named vector with correlation values and variable names
correlations_named <- setNames(correlations, 
                               c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                 "percentage_expenditure", "Hepatitis_B", "Measles", 
                                 "BMI", "under_five_deaths", "Polio", "Total_expenditure", 
                                 "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                 "thinness_1_19_years", "thinness_5_9_years", 
                                 "Income_composition_of_resources", "Schooling"))

# Step 3: Convert to tibble and sort correlations
correlations_tbl <- enframe(correlations_named, name = "Variable", value = "Correlation") %>%
  arrange(desc(Correlation))  # Sort by descending correlation

# Step 4: Split the tibble into positive, negative, and weak correlations
positive_corr <- correlations_tbl %>% filter(Correlation > 0)
negative_corr <- correlations_tbl %>% filter(Correlation < 0)
weak_corr <- correlations_tbl %>% filter(abs(Correlation) < 0.1)

# Step 5: Display tidy results

cat("Strongest Positive Correlations with Life Expectancy:\n")
positive_corr

cat("\nStrongest Negative Correlations with Life Expectancy:\n")
negative_corr

cat("\nWeak Correlations (Close to 0):\n")
weak_corr

```

separate by developed and developing countries

```{r}

# Step 1: Subset data by 'Status' (Developed vs Developing)
developed <- life_exp_clean %>% filter(Status == "Developed")
developing <- life_exp_clean %>% filter(Status == "Developing")

# Step 2: Calculate Pearson correlations for developed and developing countries

# Developed countries correlations
correlations_dev <- cor(developed[, c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                      "percentage_expenditure", "Hepatitis_B", "Measles", 
                                      "BMI", "under_five_deaths", "Polio", "Total_expenditure",                                       "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                      "thinness_1_19_years", "thinness_5_9_years", 
                                      "Income_composition_of_resources", "Schooling")], 
                       developed$Life_expectancy)

# Developing countries correlations
correlations_devp <- cor(developing[, c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                        "percentage_expenditure", "Hepatitis_B", "Measles", 
                                        "BMI", "under_five_deaths", "Polio", "Total_expenditure", 
                                        "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                        "thinness_1_19_years", "thinness_5_9_years", 
                                        "Income_composition_of_resources", "Schooling")], 
                         developing$Life_expectancy)

# Step 3: Create named vectors for both developed and developing correlations
correlations_named_dev <- setNames(correlations_dev, 
                                   c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                     "percentage_expenditure", "Hepatitis_B", "Measles", 
                                     "BMI", "under_five_deaths", "Polio", "Total_expenditure", 
                                     "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                     "thinness_1_19_years", "thinness_5_9_years", 
                                     "Income_composition_of_resources", "Schooling"))

correlations_named_devp <- setNames(correlations_devp, 
                                    c("Adult_Mortality", "infant_deaths", "Alcohol", 
                                      "percentage_expenditure", "Hepatitis_B", "Measles", 
                                      "BMI", "under_five_deaths", "Polio", "Total_expenditure", 
                                      "Diphtheria", "HIV/AIDS", "GDP", "Population", 
                                      "thinness_1_19_years", "thinness_5_9_years", 
                                      "Income_composition_of_resources", "Schooling"))

# Step 4: Convert both sets of correlations into tibbles
correlations_tbl_dev <- enframe(correlations_named_dev, name = "Variable", value = "Correlation_Developed") %>%
  arrange(desc(Correlation_Developed))

correlations_tbl_devp <- enframe(correlations_named_devp, name = "Variable", value = "Correlation_Developing") %>%
  arrange(desc(Correlation_Developing))
correlations_tbl_dev
correlations_tbl_devp
# Step 5: Merge the two tibbles for side-by-side comparison
correlation_comparison <- left_join(correlations_tbl_dev, correlations_tbl_devp, by = "Variable")

# Step 6: Display results for comparison

cat("\n--- Comparison of Correlations with Life Expectancy: Developed vs Developing Countries ---\n")
print(correlation_comparison)

```

For developed countries, income, percentage expentiure, and GDP showed positive, strong correlation with life expectancy. polio, bmi, diphtheria and under-five-deaths all had a weak correlation with life expectancy with pearson coefficients \~0.

in contrast, developing countries had a strong, positive correlation between life expectancy and schooling, income comp, BMI, GDP, and percentage-expenditure, showing that for developing countries, BMI is still an important factor that plays a role in life expectancy, but that this correlation strength decreases as a country becomes a developed country. interestingly, total-expenditure had a week correlation in developing countries, and various diseases and alcohol had a mildly strong correlation of around 0.2.

therefore:

developing

-   recommend focusing on **education, BMI**

-   **secondary areas of focus include diseases such as diphtheria, polio, alcohol.**

developed

-   less emphasis on diseases such as Polio, BMI, Diphtheria etc.

both

-   income comp, percentage_expenditure, GDP, schooling,

multiple linear regression models

```{r}
# Model for developed countries
model_developed <- lm(Life_expectancy ~ GDP + Schooling + BMI + Alcohol + Adult_Mortality + 
                        infant_deaths + Polio + Total_expenditure + Diphtheria + Income_composition_of_resources, 
                      data = developed)

# Model for developing countries
model_developing <- lm(Life_expectancy ~ GDP + Schooling + BMI + Alcohol + Adult_Mortality + 
                         infant_deaths + Polio + Total_expenditure + Diphtheria + 
                         Income_composition_of_resources, 
                       data = developing)
# Summary of the model for developed countries
summary(model_developed)

# Summary of the model for developing countries
summary(model_developing)

```

developed;

-   GDP, BMI, Alcohol, infant deaths, Polio, total exp, diphtheria is not significant

-   Schooling, Adult mortality, diphtheria, income comp significant

developing: GDP, Schooling, BMI, Alcohol, Adult mortality, diphtheria, income comp are all signficant

visualization:

```{r}
library(ggplot2)

# Coefficients for developed countries
coef_developed <- summary(model_developed)$coefficients[, 1]
coef_developed <- data.frame(Variable = names(coef_developed), 
                             Coefficient = coef_developed)

# Coefficients for developing countries
coef_developing <- summary(model_developing)$coefficients[, 1]
coef_developing <- data.frame(Variable = names(coef_developing), 
                              Coefficient = coef_developing)

# Plotting the coefficients for comparison
ggplot(coef_developed, aes(x = reorder(Variable, Coefficient), y = Coefficient)) +
  geom_bar(stat = "identity") + 
  coord_flip() + 
  labs(title = "Coefficients for Developed Countries", x = "Variable", y = "Coefficient")

ggplot(coef_developing, aes(x = reorder(Variable, Coefficient), y = Coefficient)) +
  geom_bar(stat = "identity") + 
  coord_flip() + 
  labs(title = "Coefficients for Developing Countries", x = "Variable", y = "Coefficient")

```
